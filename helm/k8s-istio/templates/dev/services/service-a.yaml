apiVersion: v1
kind: Service
metadata:
  name: service-a
  labels:
    app: service-a
    component: service
spec:
  ports:
    - name: http
      port: 8080
  selector:
    app: service-a
    component: service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service-a
  labels:
    app: service-a
    component: service
    version: v1
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 1
  selector:
    matchLabels:
      app: service-a
      component: service
      version: v1
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/api/metrics"
      labels:
        app: service-a
        component: service
        version: v1
    spec:
      containers:
        - name: service-a
          image: {{ printf "%s/k8s-istio-service-a:%s" .Values.image.repository .Values.image.tag.ServiceA }}
          resources:
            requests:
              memory: 55Mi
              cpu: 5m
            limits:
              memory: 400Mi
              cpu: 200m
          livenessProbe:
            httpGet:
              path: /api/health
              port: 8080
            initialDelaySeconds: 3
            periodSeconds: 3
          env:
            - name: LOG_LEVEL
              value: info
            - name: SERVICE_B_URL
              value: http://service-b.dev.svc.cluster.local:8080
            - name: SERVICE_C_URL
              value: http://service-c.dev.svc.cluster.local:8080
          ports:
            - containerPort: 8080
          imagePullPolicy: {{ .Values.image.pullPolicy }}
